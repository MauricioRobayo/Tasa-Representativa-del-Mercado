{"version":3,"sources":["logo.svg","components/CopyValueButton.js","components/CopyValueButtonContainer.js","components/Value.js","components/HistoricTable/TableDate.js","components/HistoricTable/Row.js","components/HistoricTable/index.js","components/MainTicker.js","components/Menu.js","components/PrettyDate.js","components/Footer.js","useApi.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","styled","button","theme","colors","primary","white","copied","CopyValueButton","props","className","onClick","role","aria-label","CopyValueButtonContainer","value","useState","setCopied","navigator","clipboard","writeText","then","setTimeout","catch","err","console","log","ValueWrapper","span","change","Value","minimumFractionDigits","maximumFractionDigits","before","after","numValue","parseFloat","toLocaleString","undefined","defaultProps","Time","time","grey","maxWidth","TableDate","date","dateObject","Date","dateTime","substring","getDay","Tr","tr","Row","data","percChange","Table","table","greyDarker","HistoricTable","trmapiData","rows","i","length","push","key","align","TickerWrapper","div","MainTicker","currentValue","Ul","ul","Menu","href","PrettyDate","Intl","DateTimeFormat","weekday","year","month","day","format","FooterWrapper","footer","Footer","useApi","isLoading","setIsLoading","state","setData","useEffect","fetch","response","json","transformedData","reduce","acc","e","startDate","vigenciadesde","endDate","vigenciahasta","valor","toISOString","setDate","getDate","map","arr","defaultTheme","up","down","equal","dark","width","GlobalStyle","createGlobalStyle","AppWrapper","App","height","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07074ab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.00dd8334.svg\";","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Button = styled.button`\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  font-size: 1rem;\n  padding: ${({ copied }) => (copied ? '0.35em 0 0.5em' : '0.5em 0 0.35em')};\n  width: 100%;\n  max-width: 280px;\n  border-radius: 4px;\n  &:hover {\n    cursor: pointer;\n  }\n  &.table {\n    padding: ${({ copied }) => (copied ? '0 0 0.35em' : '0.45em 0 0.35em')};\n    height: 1.5rem;\n    font-size: 0.85em;\n    .text {\n      display: none;\n    }\n  }\n  .text {\n    margin-left: 0.5em;\n  }\n  > span {\n    pointer-events: none;\n  }\n`;\n\nconst CopyValueButton = (props) => (\n  <Button\n    className={props.className}\n    onClick={props.onClick}\n    copied={props.copied}\n  >\n    <span className=\"img\" role=\"img\" aria-label=\"copy-value\">\n      {props.copied ? 'üëç' : '‚ßâ'}\n    </span>\n    <span className=\"text\">{props.copied ? 'Copiado' : 'Copiar valor'}</span>\n  </Button>\n);\n\nexport default CopyValueButton;\n","import React, { useState } from 'react';\nimport CopyValueButton from './CopyValueButton';\n\nconst CopyValueButtonContainer = ({ className, value }) => {\n  const [copied, setCopied] = useState(false);\n\n  const copyValue = () => {\n    if (!navigator.clipboard) {\n      return;\n    }\n    navigator.clipboard\n      .writeText(value)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 1500);\n      })\n      .catch((err) => {\n        console.log('Failed to copy!');\n      });\n  };\n  return (\n    <CopyValueButton\n      className={className}\n      onClick={copyValue}\n      copied={copied}\n    />\n  );\n};\n\nexport default CopyValueButtonContainer;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst ValueWrapper = styled.span`\n  textarea {\n    position: absolute;\n    left: -9999px;\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n  color: ${(props) => props.theme.colors[props.change]};\n`;\n\nconst Value = (props) => {\n  let {\n    value,\n    change,\n    minimumFractionDigits,\n    maximumFractionDigits,\n    before,\n    after,\n  } = props;\n  const numValue = parseFloat(value);\n  return (\n    <ValueWrapper\n      className={change === 0 ? 'equal' : change > 0 ? 'up' : 'down'}\n      change={change === 0 ? 'equal' : change > 0 ? 'up' : 'down'}\n    >\n      {before}\n      {numValue.toLocaleString(undefined, {\n        minimumFractionDigits,\n        maximumFractionDigits,\n      })}\n      {after}\n    </ValueWrapper>\n  );\n};\n\nValue.defaultProps = {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  before: '',\n  after: '',\n  className: '',\n};\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Time = styled.time`\n  .date {\n    margin-right: 0.5em;\n  }\n  .day {\n    color: ${({ theme }) => theme.colors.grey};\n    font-size: 75%;\n    display: none;\n    text-transform: uppercase;\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      display: inline;\n    }\n  }\n`;\n\nconst TableDate = ({ date }) => {\n  const dateObject = new Date(date);\n  const weekdays = [\n    'domingo',\n    'lunes',\n    'martes',\n    'mi√©rcoles',\n    'jueves',\n    'viernes',\n    's√°bado',\n  ];\n  return (\n    <Time dateTime={date}>\n      <span className=\"date\">{date.substring(0, 10)}</span>\n      <span className=\"day\">{weekdays[dateObject.getDay()]}</span>\n    </Time>\n  );\n};\n\nexport default TableDate;\n","import React from 'react';\nimport Value from '../Value';\nimport TableDate from './TableDate';\nimport styled from 'styled-components';\nimport CopyValueButtonContainer from '../CopyValueButtonContainer';\n\nconst Tr = styled.tr`\n  .change {\n    margin-right: 0.5em;\n  }\n  .right {\n    text-align: right;\n  }\n  .left {\n    text-align: left;\n  }\n`;\n\nconst Row = ({ data }) => {\n  return (\n    <Tr>\n      <td className=\"left\">\n        <TableDate date={data.date} />\n      </td>\n      <td className=\"right\">\n        <Value value={data.value} change={data.change} />\n      </td>\n      <td className=\"right\">\n        <Value\n          className=\"change\"\n          value={data.change}\n          change={data.change}\n          before={data.change > 0 ? '+' : ''}\n        />\n        <Value\n          className=\"percChange\"\n          value={data.percChange * 100}\n          change={data.percChange}\n          before=\"(\"\n          after=\"%)\"\n        />\n      </td>\n      <td className=\"right\">\n        <CopyValueButtonContainer className=\"table\" value={data.value} />\n      </td>\n    </Tr>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Row from './Row';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  padding: 1em;\n  font-size: 0.85rem;\n  @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n    font-size: 1rem;\n  }\n  thead {\n    th {\n      border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    }\n  }\n  tr {\n    padding: 0 0.25em;\n  }\n  td,\n  th {\n    padding: 0.5em 1em 0.5em 0;\n    border-bottom: 0.5px solid ${({ theme }) => theme.colors.greyDarker};\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      padding: 0.5em 1em 0.5em 0;\n    }\n  }\n  td:last-child,\n  th:last-child {\n    padding: 0.5em 0 0.25em;\n  }\n  .percChange,\n  .text {\n    display: none;\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      display: inline;\n    }\n  }\n`;\n\nconst HistoricTable = ({ trmapiData }) => {\n  let rows = [];\n  for (let i = 0; i < trmapiData.length - 1; i += 1) {\n    rows.push(<Row key={trmapiData[i].date} data={trmapiData[i]} />);\n  }\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th align=\"left\">Fecha</th>\n          <th align=\"right\">TRM</th>\n          <th align=\"right\">Cambio</th>\n          <th align=\"right\">Copiar</th>\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  );\n};\n\nexport default HistoricTable;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport Value from './Value';\n\nconst TickerWrapper = styled.div`\n  margin: 1rem 0 0.5rem;\n  font-weight: bold;\n  font-size: 1.5em;\n  @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n    font-size: 2em;\n  }\n  span::before {\n    content: '$';\n    font-size: 0.5em;\n    margin-right: 0.5rem;\n  }\n  span::after {\n    font-size: 0.5em;\n    margin-left: 0.5rem;\n  }\n  span.up::after {\n    content: '‚ñ≤';\n  }\n  span.down::after {\n    content: '‚ñº';\n  }\n`;\n\nconst MainTicker = (props) => {\n  if (!props.currentValue) {\n    return null;\n  }\n  const { change, value } = props.currentValue;\n  return (\n    <TickerWrapper>\n      <Value value={value} change={change} />\n    </TickerWrapper>\n  );\n};\n\nexport default MainTicker;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Ul = styled.ul`\n  font-size: 0.85em;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  li {\n    padding-left: 1em;\n    &:first-child {\n      padding-left: 0;\n    }\n    a {\n      color: ${({ theme }) => theme.colors.white};\n      text-decoration: none;\n    }\n  }\n`;\n\nconst Menu = () => {\n  return (\n    <Ul>\n      <li>\n        <a href=\"https://github.com/MauricioRobayo/tasa-representativa-del-mercado\">\n          C√≥digo\n        </a>\n      </li>\n    </Ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst PrettyDate = (props) => (\n  <time dateTime={props.date}>\n    {new Intl.DateTimeFormat('es', {\n      weekday: props.weekday,\n      year: props.year,\n      month: props.month,\n      day: props.day,\n    }).format(new Date(props.date))}\n  </time>\n);\n\nPrettyDate.defaultProps = {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nexport default PrettyDate;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport Menu from './Menu';\n\nconst FooterWrapper = styled.footer`\n  margin: 1em auto;\n  padding: 1em 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.grey};\n  a {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n  ul {\n    justify-content: center;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <Menu />\n      <p>\n        <a href=\"https://www.mauriciorobayo.com/tasa-representativa-del-mercado\">\n          trmapi\n        </a>{' '}\n        es un proyecto de c√≥digo abierto.\n      </p>\n      <p>\n        <a href=\"https://github.com/MauricioRobayo/tasa-representativa-del-mercado/\">\n          Ay√∫denos a mejorarlo.\n        </a>\n      </p>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\n\nfunction useApi() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [state, setData] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://www.datos.gov.co/resource/32sa-8pi3.json?$limit=30';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        const transformedData = data\n          .reduce((acc, e, i) => {\n            const startDate = new Date(e.vigenciadesde);\n            const endDate = new Date(e.vigenciahasta);\n            while (endDate >= startDate) {\n              acc.push({\n                value: e.valor,\n                date: endDate.toISOString(),\n              });\n\n              endDate.setDate(endDate.getDate() - 1);\n            }\n            return acc;\n          }, [])\n          .map((e, i, arr) => {\n            if (i + 1 < arr.length) {\n              e.change = e.value - arr[i + 1].value;\n              e.percChange = e.change / e.value;\n            }\n            return e;\n          });\n        setData(transformedData);\n        setIsLoading(false);\n      });\n  }, []);\n  return {\n    isLoading,\n    state,\n  };\n}\n\nexport default useApi;\n","import React from 'react';\nimport styled, {\n  createGlobalStyle,\n  ThemeProvider,\n} from 'styled-components/macro';\nimport CopyValueButtonContainer from './components/CopyValueButtonContainer';\nimport HistoricTable from './components/HistoricTable';\nimport MainTicker from './components/MainTicker';\nimport Menu from './components/Menu';\nimport PrettyDate from './components/PrettyDate';\nimport logo from './logo.svg';\nimport Footer from './components/Footer';\nimport useApi from './useApi';\n\nconst defaultTheme = {\n  colors: {\n    up: '#00C853',\n    down: '#F44336',\n    equal: '#FFE42D',\n    dark: '#282c34',\n    white: '#fff',\n    grey: '#9E9E9E',\n    greyDarker: '#444444',\n    primary: '#0CA0E8',\n  },\n  maxWidth: '640px',\n  width: '95%',\n};\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font: 16px Arial, Helvetica, sans-serif;\n    color: ${defaultTheme.colors.white};\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      font-size: 18px;\n    }\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    text-align: center;\n    width: 100%;\n    background-color: ${defaultTheme.colors.dark};\n    color: ${defaultTheme.colors.white};\n  }\n`;\n\nconst AppWrapper = styled.div`\n  max-width: ${({ theme }) => theme.maxWidth};\n  margin: auto;\n  nav,\n  header,\n  main {\n    padding: 0.5em 1em;\n  }\n  nav {\n    font-size: 1rem;\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n  }\n  header {\n    font-size: 2rem;\n    margin: 0 0 2rem 0;\n    h1,\n    h2 {\n      font-weight: normal;\n      font-size: 0.5em;\n    }\n  }\n  main {\n    table {\n      margin: auto;\n    }\n  }\n`;\n\nconst App = () => {\n  const { isLoading, state } = useApi();\n  const currentValue = isLoading ? {} : state[0];\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <AppWrapper>\n        <GlobalStyle />\n        {console.log('rendering...', { isLoading })}\n        <nav>\n          <img width=\"60px\" height=\"auto\" src={logo} alt=\"logo\" />\n          <Menu />\n        </nav>\n        {isLoading ? (\n          'Cargando...'\n        ) : (\n          <>\n            <header>\n              <h1>Tasa Representativa del Mercado</h1>\n              <h2>\n                <PrettyDate date={currentValue.date} />\n              </h2>\n              <MainTicker currentValue={currentValue} />\n              <CopyValueButtonContainer value={currentValue.value} />\n            </header>\n            <main>\n              <HistoricTable trmapiData={state} />\n            </main>\n          </>\n        )}\n        <Footer />\n      </AppWrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}