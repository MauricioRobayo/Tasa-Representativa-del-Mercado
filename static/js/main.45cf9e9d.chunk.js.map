{"version":3,"sources":["logo.svg","components/CopyValueButton.js","containers/CopyValueButtonContainer.js","components/Value.js","components/HistoricTable/TableDate.js","components/HistoricTable/Row.js","components/HistoricTable/index.js","components/MainTicker.js","components/Menu.js","components/PrettyDate.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","styled","button","theme","colors","primary","white","copied","maxWidth","CopyValueButton","props","className","onClick","role","aria-label","CopyValueButtonContainer","state","copyValue","document","getElementById","valueId","select","execCommand","setState","setTimeout","this","Component","ValueWrapper","span","change","Value","value","minimumFractionDigits","maximumFractionDigits","before","after","toLocaleString","undefined","id","defaultValue","useGrouping","readOnly","defaultProps","Time","time","grey","TableDate","date","dateObject","Date","dateTime","substring","getDay","Tr","tr","Row","data","align","percChange","Table","table","greyDarker","HistoricTable","trmapiData","rows","i","length","push","key","TickerWrapper","div","MainTicker","currentValue","Ul","ul","Menu","href","PrettyDate","Intl","DateTimeFormat","weekday","year","month","day","format","FooterWrapper","footer","Footer","defaultTheme","up","down","equal","dark","width","GlobalStyle","createGlobalStyle","AppWrapper","App","isLoading","fetch","then","response","json","transformedData","reduce","acc","e","startDate","vigenciadesde","endDate","vigenciahasta","valor","toISOString","setDate","getDate","map","arr","height","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45cf9e9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.00dd8334.svg\";","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Button = styled.button`\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  font-size: 1rem;\n  padding: ${({ copied }) => (copied ? '0.35em 0 0.5em' : '0.5em 0 0.35em')};\n  width: 100%;\n  max-width: 280px;\n  border-radius: 4px;\n  &:hover {\n    cursor: pointer;\n  }\n  &.table {\n    padding: ${({ copied }) =>\n      copied ? '0.35em 0 0.55em' : '0.75em 0 0.25em'};\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 50%;\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      padding: ${({ copied }) =>\n        copied ? '0.25em 0 0.35em' : '0.5em 0 0.25em'};\n      min-width: 145px;\n      border-radius: 4px;\n    }\n    font-size: 0.85em;\n    .text {\n      display: none;\n      @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n        display: inline;\n      }\n    }\n  }\n  .text {\n    margin-left: 0.5em;\n  }\n  > span {\n    pointer-events: none;\n  }\n`\n\nconst CopyValueButton = props => (\n  <Button\n    className={props.className}\n    onClick={props.onClick}\n    copied={props.copied}\n  >\n    <span className=\"img\" role=\"img\" aria-label=\"copy-value\">\n      {props.copied ? 'üëç' : '‚ßâ'}\n    </span>\n    <span className=\"text\">\n      {props.copied ? 'Valor copiado' : 'Copiar valor'}\n    </span>\n  </Button>\n)\n\nexport default CopyValueButton\n","import React, { Component } from 'react'\nimport CopyValueButton from '../components/CopyValueButton'\n\nclass CopyValueButtonContainer extends Component {\n  state = { copied: false }\n\n  copyValue = () => {\n    var copyText = document.getElementById(this.props.valueId)\n    copyText.select()\n    document.execCommand('copy')\n    this.setState({ copied: true })\n    setTimeout(() => this.setState({ copied: false }), 1500)\n  }\n  render() {\n    return (\n      <CopyValueButton\n        className={this.props.className}\n        onClick={this.copyValue}\n        copied={this.state.copied}\n      />\n    )\n  }\n}\n\nexport default CopyValueButtonContainer\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst ValueWrapper = styled.span`\n  textarea {\n    position: absolute;\n    left: -9999px;\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n  color: ${props => props.theme.colors[props.change]};\n`\n\nconst Value = props => {\n  let {\n    value,\n    change,\n    minimumFractionDigits,\n    maximumFractionDigits,\n    before,\n    after,\n    valueId,\n  } = props\n  return (\n    <ValueWrapper\n      className={change === 0 ? 'equal' : change > 0 ? 'up' : 'down'}\n      change={change === 0 ? 'equal' : change > 0 ? 'up' : 'down'}\n    >\n      {before}\n      {value.toLocaleString(undefined, {\n        minimumFractionDigits,\n        maximumFractionDigits,\n      })}\n      {after}\n      {valueId && (\n        <textarea\n          id={valueId}\n          defaultValue={value.toLocaleString(undefined, { useGrouping: false })}\n          readOnly\n        />\n      )}\n    </ValueWrapper>\n  )\n}\n\nValue.defaultProps = {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  before: '',\n  after: '',\n  className: '',\n}\nexport default Value\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Time = styled.time`\n  .date {\n    margin-right: 0.5em;\n  }\n  .day {\n    color: ${({ theme }) => theme.colors.grey};\n    font-size: 75%;\n    display: none;\n    text-transform: uppercase;\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      display: inline;\n    }\n  }\n`\n\nconst TableDate = ({ date }) => {\n  const dateObject = new Date(date)\n  const weekdays = [\n    'domingo',\n    'lunes',\n    'martes',\n    'mi√©rcoles',\n    'jueves',\n    'viernes',\n    's√°bado',\n  ]\n  return (\n    <Time dateTime={date}>\n      <span className=\"date\">{date.substring(0, 10)}</span>\n      <span className=\"day\">{weekdays[dateObject.getDay()]}</span>\n    </Time>\n  )\n}\n\nexport default TableDate\n","import React from 'react'\nimport Value from '../Value'\nimport TableDate from './TableDate'\nimport styled from 'styled-components'\nimport CopyValueButtonContainer from '../../containers/CopyValueButtonContainer'\n\nconst Tr = styled.tr`\n  .change {\n    margin-right: 0.5em;\n  }\n`\n\nconst Row = ({ data }) => {\n  return (\n    <Tr>\n      <td align=\"left\">\n        <TableDate date={data.date} />\n      </td>\n      <td align=\"right\">\n        <Value\n          value={data.value}\n          change={data.change}\n          valueId={`value-${data.date}`}\n        />\n      </td>\n      <td align=\"right\">\n        <Value\n          className=\"change\"\n          value={data.change}\n          change={data.change}\n          before={data.change > 0 ? '+' : ''}\n        />\n        <Value\n          className=\"percChange\"\n          value={data.percChange * 100}\n          change={data.percChange}\n          before=\"(\"\n          after=\"%)\"\n        />\n      </td>\n      <td align=\"left\">\n        <CopyValueButtonContainer\n          className=\"table\"\n          valueId={`value-${data.date}`}\n        />\n      </td>\n    </Tr>\n  )\n}\n\nexport default Row\n","import React from 'react'\nimport styled from 'styled-components'\nimport Row from './Row'\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  padding: 1em;\n  font-size: 0.85rem;\n  @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n    font-size: 1rem;\n  }\n  thead {\n    th {\n      border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    }\n  }\n  tr {\n    padding: 0 0.25em;\n  }\n  td,\n  th {\n    padding: 0.5em 1em 0.5em 0;\n    border-bottom: 0.5px solid ${({ theme }) => theme.colors.greyDarker};\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      padding: 0.5em 1em 0.5em 0;\n    }\n  }\n  td:last-child,\n  th:last-child {\n    padding: 0.5em 0 0.25em;\n  }\n  .percChange,\n  .text {\n    display: none;\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      display: inline;\n    }\n  }\n`\n\nconst HistoricTable = ({ trmapiData }) => {\n  let rows = []\n  for (let i = 0; i < trmapiData.length - 1; i += 1) {\n    rows.push(<Row key={trmapiData[i].date} data={trmapiData[i]} />)\n  }\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th align=\"left\">Fecha</th>\n          <th align=\"right\">TRM</th>\n          <th align=\"right\">Cambio</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  )\n}\n\nexport default HistoricTable\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport Value from './Value'\n\nconst TickerWrapper = styled.div`\n  margin: 1rem 0 0.5rem;\n  font-weight: bold;\n  font-size: 1.5em;\n  @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n    font-size: 2em;\n  }\n  span::before {\n    content: '$';\n    font-size: 0.5em;\n    margin-right: 0.5rem;\n  }\n  span::after {\n    font-size: 0.5em;\n    margin-left: 0.5rem;\n  }\n  span.up::after {\n    content: '‚ñ≤';\n  }\n  span.down::after {\n    content: '‚ñº';\n  }\n`\n\nconst MainTicker = props => {\n  if (!props.currentValue) {\n    return null\n  }\n  const { change, value, date } = props.currentValue\n  return (\n    <TickerWrapper>\n      <Value value={value} change={change} valueId={`value-${date}`} />\n    </TickerWrapper>\n  )\n}\n\nexport default MainTicker\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Ul = styled.ul`\n  font-size: 0.85em;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  li {\n    padding-left: 1em;\n    &:first-child {\n      padding-left: 0;\n    }\n    a {\n      color: ${({ theme }) => theme.colors.white};\n      text-decoration: none;\n    }\n  }\n`\n\nconst Menu = () => {\n  return (\n    <Ul>\n      <li>\n        <a href=\"https://github.com/MauricioRobayo/tasa-representativa-del-mercado\">\n          C√≥digo\n        </a>\n      </li>\n    </Ul>\n  )\n}\n\nexport default Menu\n","import React from 'react'\n\nconst PrettyDate = props => (\n  <time dateTime={props.date}>\n    {new Intl.DateTimeFormat('es', {\n      weekday: props.weekday,\n      year: props.year,\n      month: props.month,\n      day: props.day,\n    }).format(new Date(props.date))}\n  </time>\n)\n\nPrettyDate.defaultProps = {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n}\n\nexport default PrettyDate\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport Menu from './Menu'\n\nconst FooterWrapper = styled.footer`\n  margin: 1em auto;\n  padding: 1em 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.grey};\n  a {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n  ul {\n    justify-content: center;\n  }\n`\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <Menu />\n      <p>\n        <a href=\"https://www.mauriciorobayo.com/tasa-representativa-del-mercado\">\n          trmapi\n        </a>{' '}\n        es un proyecto de c√≥digo abierto.\n      </p>\n      <p>\n        <a href=\"https://github.com/MauricioRobayo/tasa-representativa-del-mercado/\">\n          Ay√∫denos a mejorarlo.\n        </a>\n      </p>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","import React, { Component, Fragment } from 'react'\nimport styled, {\n  createGlobalStyle,\n  ThemeProvider,\n} from 'styled-components/macro'\nimport CopyValueButtonContainer from './containers/CopyValueButtonContainer'\nimport HistoricTable from './components/HistoricTable'\nimport MainTicker from './components/MainTicker'\nimport Menu from './components/Menu'\nimport PrettyDate from './components/PrettyDate'\nimport logo from './logo.svg'\nimport Footer from './components/Footer'\n\nconst defaultTheme = {\n  colors: {\n    up: '#00C853',\n    down: '#F44336',\n    equal: '#FFE42D',\n    dark: '#282c34',\n    white: '#fff',\n    grey: '#9E9E9E',\n    greyDarker: '#444444',\n    primary: '#0CA0E8',\n  },\n  maxWidth: '640px',\n  width: '95%',\n}\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font: 16px Arial, Helvetica, sans-serif;\n    color: ${defaultTheme.colors.white};\n    @media screen and (min-width: ${({ theme }) => theme.maxWidth}) {\n      font-size: 18px;\n    }\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    text-align: center;\n    width: 100%;\n    background-color: ${defaultTheme.colors.dark};\n    color: ${defaultTheme.colors.white};\n  }\n`\n\nconst AppWrapper = styled.div`\n  max-width: ${({ theme }) => theme.maxWidth};\n  margin: auto;\n  nav,\n  header,\n  main {\n    padding: 0.5em 1em;\n  }\n  nav {\n    font-size: 1rem;\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n  }\n  header {\n    font-size: 2rem;\n    margin: 0 0 2rem 0;\n    h1,\n    h2 {\n      font-weight: normal;\n      font-size: 0.5em;\n    }\n  }\n  main {\n    table {\n      margin: auto;\n    }\n  }\n`\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    data: [],\n  }\n  componentDidMount() {\n    const url = 'https://www.datos.gov.co/resource/32sa-8pi3.json?$limit=30'\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const transformedData = data\n          .reduce((acc, e, i) => {\n            const startDate = new Date(e.vigenciadesde)\n            const endDate = new Date(e.vigenciahasta)\n            while (endDate >= startDate) {\n              acc.push({\n                value: e.valor,\n                date: endDate.toISOString(),\n              })\n\n              endDate.setDate(endDate.getDate() - 1)\n            }\n            return acc\n          }, [])\n          .map((e, i, arr) => {\n            if (i + 1 < arr.length) {\n              e.change = e.value - arr[i + 1].value\n              e.percChange = e.change / e.value\n            }\n            return e\n          })\n        this.setState({\n          isLoading: false,\n          data: transformedData,\n        })\n      })\n  }\n\n  render() {\n    let currentValue = {}\n    if (!this.state.isLoading) {\n      currentValue = this.state.data[0]\n    }\n    return (\n      <ThemeProvider theme={defaultTheme}>\n        <AppWrapper>\n          <GlobalStyle />\n          <nav>\n            <img width=\"60px\" height=\"auto\" src={logo} alt=\"logo\" />\n            <Menu />\n          </nav>\n          {this.state.isLoading ? (\n            'Cargando...'\n          ) : (\n            <Fragment>\n              <header>\n                <h1>Tasa Representativa del Mercado</h1>\n                <h2>\n                  <PrettyDate date={currentValue.date} />\n                </h2>\n                <MainTicker currentValue={currentValue} />\n                <CopyValueButtonContainer\n                  valueId={`value-${currentValue.date}`}\n                />\n              </header>\n              <main>\n                <HistoricTable trmapiData={this.state.data} />\n              </main>\n            </Fragment>\n          )}\n          <Footer />\n        </AppWrapper>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}